@import "~bulma/sass/utilities/_all";

$primary: #59a5da;
$primary-light: findLightColor($primary);
$primary-dark: findDarkColor($primary);
$primary-invert: findColorInvert($primary);

$blue-team: #004dff;
$blue-team-invert: findColorInvert($blue-team);
$crimson-team: #fe0009;
$crimson-team-invert: findColorInvert($crimson-team);
$orange-team: #ff8301;
$orange-team-invert: findColorInvert($orange-team);
$gold-team: #fff201;
$gold-team-invert: findColorInvert($gold-team);
$green-team: #00fa3d;
$green-team-invert: findColorInvert($green-team);
$grey-team: #868889;
$grey-team-invert: findColorInvert($grey-team);
$pink-team: #fe00fd;
$pink-team-invert: findColorInvert($pink-team);
$purple-team: #8601ff;
$purple-team-invert: findColorInvert($purple-team);

$jude-red: #f04b31;
$jude-red-invert: findColorInvert($jude-red);
$jude-green: #49b647;
$jude-green-invert: findColorInvert($jude-green);
$jude-orange: #f36e22;
$jude-orange-invert: findColorInvert($jude-orange);
$jude-yellow: #fba72d;
$jude-yellow-invert: findColorInvert($jude-yellow);
$jude-pink: #f04e9c;
$jude-pink-invert: findColorInvert($jude-pink);

$custom-colors: (
  "blue-team": ($blue-team, $blue-team-invert),
  "crimson-team": ($crimson-team, $crimson-team-invert),
  "orange-team": ($orange-team, $orange-team-invert),
  "gold-team": ($gold-team, $gold-team-invert),
  "green-team": ($green-team, $green-team-invert),
  "grey-team": ($grey-team, $grey-team-invert),
  "pink-team": ($pink-team, $pink-team-invert),
  "purple-team": ($purple-team, $purple-team-invert),
  "jude-red": ($jude-red, $jude-red-invert),
  "jude-green": ($jude-green, $jude-green-invert),
  "jude-orange": ($jude-orange, $jude-orange-invert),
  "jude-yellow": ($jude-yellow, $jude-yellow-invert),
  "jude-pink": ($jude-pink, $jude-pink-invert)
);

$colors: mergeColorMaps(
  (
    "white": (
      $white,
      $black,
    ),
    "black": (
      $black,
      $white,
    ),
    "light": (
      $light,
      $light-invert,
    ),
    "dark": (
      $dark,
      $dark-invert,
    ),
    "primary": (
      $primary,
      $primary-invert,
      $primary-light,
      $primary-dark,
    ),
    "link": (
      $link,
      $link-invert,
      $link-light,
      $link-dark,
    ),
    "info": (
      $info,
      $info-invert,
      $info-light,
      $info-dark,
    ),
    "success": (
      $success,
      $success-invert,
      $success-light,
      $success-dark,
    ),
    "warning": (
      $warning,
      $warning-invert,
      $warning-light,
      $warning-dark,
    ),
    "danger": (
      $danger,
      $danger-invert,
      $danger-light,
      $danger-dark,
    ),
  ),
  $custom-colors
);

@import "~bulma";
@import "~buefy/src/scss/buefy";

@font-face {
    font-family: 'Highway Gothic Wide';
    font-style: normal;
    font-weight: 400;
    src: local('Highway Gothic Wide'), url('https://fonts.cdnfonts.com/s/8582/HWYGWDE.woff') format('woff');
}

* {
  font-family: 'Highway Gothic Wide', sans-serif;
}

#body {
  margin: 0;
  padding: 0;
}

#top-bar {
  padding: 1rem;
  padding-bottom: 0rem;
}

#mid-bar {
  padding: 1rem;
  padding-top: 0rem;
}

.subtext {
  color: #9F9F9F;
}


#block-container {
  width: 100%;
}

.progress-value {
  width: 99%;
}

.block {
  padding-top: 1rem;
  padding-bottom: 0;
}

.letter-input {
  height: 50vh;
}

.snowflake {
  --size: 1vw;
  width: var(--size);
  height: var(--size);
  position: absolute;
  top: -5vh;
  pointer-events: none;
}

.snowflake-image {
  opacity: 0.9;
  pointer-events: none;
}

@keyframes snowfall {
  0% {
    transform: translate3d(var(--left-ini), 0, 0);
  }
  100% {
    transform: translate3d(var(--left-end), 105vh, 0);
  }
}

@for $i from 1 through 50 {
  .snowflake:nth-child(#{$i}) {
    --size: #{random(3) + 1}vw;
    --left-ini: #{random(20) - 10}vw;
    --left-end: #{random(20) - 10}vw;
    left: #{random(100)}vw;
    animation: snowfall #{5 + random(10)}s linear infinite;
    animation-delay: -#{random(10)}s;
  }
}